@use "sass:math";
// =============================================================================
// Useful Utilities
// =============================================================================

// Aspect Ratio
// -----------------------------------------------------------------------------
//
// Purpose: Maintain aspect ratio e.g. 16/9, 4/3
//
//
// 1.
//
// -----------------------------------------------------------------------------
@mixin aspect-ratio($width, $height) {
    display: block;
    overflow: hidden;
    position: relative;

    &:before {
        display: block;
        content: "";
        padding-top: math.div($height, $width) * 100%;
        width: 100%;
    }

    > * {
        bottom: 0;
        height: 100%;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        width: 100%;
    }
}


// Centering
// -----------------------------------------------------------------------------
//
// Purpose: Center an element
//
//
// 1. Vertical
// 2. Horizontal
// 3. Both
//
// -----------------------------------------------------------------------------

@mixin center($position) {
    position: absolute;

    // 1
    @if $position == 'vertical' {
        top: 50%;
        transform: translateY(-50%);
    }
        // 2
    @else if $position == 'horizontal' {
        left: 50%;
        transform: translate(-50%);
    }
        // 3
    @else if $position == 'both' {
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}


// Font Size
// -----------------------------------------------------------------------------
//
// Purpose: REM Font size with pixel fallback
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin font-size($sizeValue) {
    font-size: ($sizeValue * 10) + px;
    font-size: $sizeValue + rem;
}


// Hiding
// -----------------------------------------------------------------------------
//
// Purpose: Useful mixins for hiding text & elements visually, but not from the DOM
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin text-hide() {
    display: block;
    overflow: hidden;
    text-indent: -9000px;
}

.u-text-hide {
    @include text-hide;
}

@mixin visually-hide() {
    clip: rect(0 0 0 0);
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

.u-visually-hide {
    @include visually-hide;
}


// Hocus
// -----------------------------------------------------------------------------
//
// Purpose: Generate ':hover' and ':focus' styles in one go
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin hocus() {
    &:hover,
    &:focus {
        @content;
    }
}


// Responsive Font
// -----------------------------------------------------------------------------
//
// Purpose: Viewport sized typography with minimum and maximum values
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
    $responsive-unitless: math.div($responsive, ($responsive - $responsive + 1));
    $dimension: if(unit($responsive) == 'vh', 'height', 'width');
    $min-breakpoint: math.div($min, $responsive-unitless) * 100;

    @media (max-#{$dimension}: #{$min-breakpoint}) {
        font-size: $min;
    }

    @if $max {
        $max-breakpoint: math.div($max, $responsive-unitless) * 100;

        @media (min-#{$dimension}: #{$max-breakpoint}) {
            font-size: $max;
        }
    }

    @if $fallback {
        font-size: $fallback;
    }

    font-size: $responsive;
}


// Text Alignment
// -----------------------------------------------------------------------------
//
// Purpose: Useful mixins for text alignment
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin text-left           { text-align: left; }
@mixin text-right          { text-align: right; }
@mixin text-center         { text-align: center; }
@mixin text-justify        { text-align: justify; }


// Text Transformations
// -----------------------------------------------------------------------------
//
// Purpose: Useful mixins for text transforming, e.g. uppercase
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin text-lowercase      { text-transform: lowercase; }
@mixin text-uppercase      { text-transform: uppercase; }
@mixin text-capitalize     { text-transform: capitalize; }


// Triangles
// -----------------------------------------------------------------------------
//
// Purpose: Rather than using images we can show triangles in pure css
//
//
// 1.
//
// -----------------------------------------------------------------------------

@mixin triangle-right($color, $height, $width) {
    border-color: transparent transparent transparent $color;
    border-style: solid;
    border-width: ($height*0.5) 0 ($height*0.5) ($width);
    height: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
    width: 0;
}

@mixin triangle-left($color, $height, $width) {
    border-color: transparent $color transparent transparent;
    border-style: solid;
    border-width: ($height*0.5) ($width) ($height*0.5) 0;
    height: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
    width: 0;
}

@mixin triangle-top($color, $height, $width) {
    border-color: transparent transparent $color transparent;
    border-style: solid;
    border-width: 0 ($width*0.5) $height ($width*0.5);
    height: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
    width: 0;
}

@mixin triangle-bottom($color, $height, $width) {
    border-color: $color transparent transparent transparent;
    border-style: solid;
    border-width: $height ($width*0.5) 0 ($width*0.5);
    height: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
    width: 0;
}

@mixin triangle-top-left($color, $height, $width) {
    border-left: $width solid $color;
    border-bottom: $height solid transparent;
    height: 0;
    width: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
}

@mixin triangle-top-right($color, $height, $width) {
    border-right: $width solid $color;
    border-bottom: $height solid transparent;
    height: 0;
    width: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
}

@mixin triangle-bottom-left($color, $height, $width) {
    border-right: none;
    border-left: $width solid $color;
    border-top: $height solid transparent;
    height: 0;
    width: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
}

@mixin triangle-bottom-right($color, $height, $width) {
    border-left: none;
    border-right: $width solid $color;
    border-top: $height solid transparent;
    height: 0;
    width: 0;
    -moz-transform: scaleY(.9999);
    -moz-transform-origin: top;
}


